name: PHP Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: PHP ${{ matrix.php }} Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4', '8.0']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: mbstring, xml, curl, zip, gd, pdo_mysql
        tools: composer:v2
        coverage: xdebug

    - name: Validate composer.json
      run: composer validate --strict

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-progress --no-interaction
        composer require phpunit/phpunit --dev

    - name: Create test database
      run: |
        mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_db;"
        mysql -h 127.0.0.1 -u root -proot test_db < sql/schema.sql

    - name: Copy configuration for tests
      run: |
        cp config/config.php.dist config/config.php
        sed -i 's/localhost/127.0.0.1/g' config/config.php
        sed -i 's/your_database/test_db/g' config/config.php
        sed -i 's/your_username/root/g' config/config.php
        sed -i 's/your_password/root/g' config/config.php

    - name: Run PHPUnit tests
      run: ./vendor/bin/phpunit tests/ --configuration tests/phpunit.xml --coverage-clover coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: phpunit-coverage-${{ matrix.php }}
        path: coverage.xml

  security:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        tools: composer:v2

    - name: Run security checker
      run: |
        composer require --dev enlightn/security-checker
        ./vendor/bin/security-checker security:check

  lint:
    name: PHP Syntax Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Check PHP syntax
      run: |
        find . -name "*.php" -not -path "./vendor/*" -not -path "./tests/*" -exec php -l {} \;

  # Новый job для автоматического исправления стиля
  auto-fix:
    name: Auto Fix Code Style
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        tools: composer:v2

    - name: Install PHP Code Sniffer and Fixer
      run: |
        composer require --dev squizlabs/php_codesniffer

    - name: Install jq for JSON parsing
      run: sudo apt-get install -y jq

    - name: Auto-fix code style
      run: |
        echo "Running PHPCBF to fix automatic violations..."
        ./vendor/bin/phpcbf class/ --standard=PSR12 --report=summary || true
        
        # Проверяем остаточные нарушения с нашим кастомным config
        echo "Checking remaining violations with custom rules..."
        REMAINING_VIOLATIONS=$(./vendor/bin/phpcs class/ --standard=phpcs.xml --report=json | jq '.totals.errors + .totals.warnings')
        echo "Remaining violations after auto-fix: $REMAINING_VIOLATIONS"
        
        if [ "$REMAINING_VIOLATIONS" -gt 0 ]; then
          echo "There are $REMAINING_VIOLATIONS violations that cannot be fixed automatically"
          echo "These violations require manual intervention:"
          ./vendor/bin/phpcs class/ --standard=phpcs.xml --report=source
        fi

    - name: Final code style check
      run: |
        echo "Final code style check with custom rules:"
        ./vendor/bin/phpcs class/ --standard=phpcs.xml --report=summary --warning-severity=0
        
        # Проверяем только ошибки (игнорируем предупреждения)
        ERROR_COUNT=$(./vendor/bin/phpcs class/ --standard=phpcs.xml --report=json --warning-severity=0 | jq '.totals.errors')
        
        if [ "$ERROR_COUNT" -gt 0 ]; then
          echo "There are $ERROR_COUNT errors that need to be fixed manually"
          exit 1
        else
          echo "No critical errors found! 🎉"
        fi
